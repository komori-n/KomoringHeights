# for Linux environment
name: Make CI (for Ubuntu Linux)

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-ubuntu:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        edition:
          - USER_ENGINE
        compiler:
          - g++-12
          - g++-11
          - clang++-14
          - clang++-15
          - clang++-16
          - clang++-17
        target: ["normal"]
        archcpu:
          - "AVX512,AVX2,SSE42,SSE41"
          - "SSSE3,SSE2,OTHER"
          - "ZEN2,ZEN1,AVX512VNNI"
          - "ZEN3,AVXVNNI"
          - "NO_SSE"
        exclude:
          # Ubuntu-20.04 g++-10 は archcpu ZEN3,AVXVNNI のサポートを行わない
          # ubuntu-20.04 g++-10 will not support the archcpu ZEN3,AVXVNNI
          # `-march=cascadelake`: LLVM8, GCC9 support (AVX512VNNI)
          # `-march=znver2`: LLVM9, GCC9 support
          # `-march=alderlake` : LLVM12, GCC11 support (AVX-VNNI)
          # `-march=znver3`: LLVM12, GCC11? support
          - compiler: g++-10
            archcpu: "ZEN3,AVXVNNI"
          - compiler: clang++-10
            archcpu: "ZEN3,AVXVNNI"
          - compiler: clang++-11
            archcpu: "ZEN3,AVXVNNI"
          # Linux 32bit archcpu 向けのビルドは通常はしない
          # don't usually build for Linux 32bit archcpu
          - archcpu: NO_SSE

    steps:
      - name: Checkout own repository
        uses: actions/checkout@v2
        with:
          path: main

      - name: install g++-11
        run: |
          sudo cat /etc/apt/sources.list
          sudo ls -R /etc/apt/sources.list.d
          sudo apt update
          sudo apt install build-essential libopenblas-dev g++-11
        if: ${{ matrix.compiler == 'g++-11' }}

      - name: install g++-12
        run: |
          sudo cat /etc/apt/sources.list
          sudo ls -R /etc/apt/sources.list.d
          sudo apt update
          sudo apt install build-essential libopenblas-dev g++-12
        if: ${{ matrix.compiler == 'g++-12' }}

      - name: install clang-14
        # LLVM APT
        run: |
          # install clang-14
          sudo apt install build-essential libopenblas-dev clang-14
          sudo cat /etc/apt/sources.list
          sudo ls -R /etc/apt/sources.list.d
        if: ${{ matrix.compiler == 'clang++-14' }}

      - name: install clang-15
        # LLVM APT
        run: |
          # install clang-15
          sudo apt install build-essential libopenblas-dev clang-15
          sudo cat /etc/apt/sources.list
          sudo ls -R /etc/apt/sources.list.d
        if: ${{ matrix.compiler == 'clang++-15' }}

      - name: install clang-16
        # LLVM APT
        run: |
          # install clang-16
          wget https://apt.llvm.org/llvm.sh
          sudo bash ./llvm.sh 16 all
          sudo apt install build-essential libopenblas-dev
          sudo cat /etc/apt/sources.list
          sudo ls -R /etc/apt/sources.list.d
        if: ${{ matrix.compiler == 'clang++-16' }}

      - name: install clang-17
        # LLVM APT
        run: |
          # install clang-17
          wget https://apt.llvm.org/llvm.sh
          sudo bash ./llvm.sh 17 all
          sudo apt install build-essential libopenblas-dev
          sudo cat /etc/apt/sources.list
          sudo ls -R /etc/apt/sources.list.d
        if: ${{ matrix.compiler == 'clang++-17' }}

      - name: install aarch64-linux-gnu-g++
        run: |
          sudo apt update
          sudo apt install crossbuild-essential-arm64
        if: ${{ matrix.compiler == 'aarch64-linux-gnu-g++' }}

      - name: make
        run: ./main/script/build.sh -e ${{ matrix.edition }} -c ${{ matrix.compiler }} -t ${{ matrix.target }} -a ${{ matrix.archcpu }}

      - uses: actions/upload-artifact@v2
        with:
          name: build-linux_${{ github.run_number }}_${{ github.sha }}
          path: ./main/build/**/**/*
